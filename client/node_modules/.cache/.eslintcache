[{"/Users/josuedavid/Documents/react/frontend/src/index.js":"1","/Users/josuedavid/Documents/react/frontend/src/reportWebVitals.js":"2","/Users/josuedavid/Documents/react/frontend/src/App.js":"3","/Users/josuedavid/Documents/react/frontend/src/components/showTodo.js":"4","/Users/josuedavid/Documents/react/frontend/src/components/updateTodo.js":"5","/Users/josuedavid/Documents/react/frontend/src/components/createTodo.js":"6"},{"size":500,"mtime":1643992959073,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1643992219198,"results":"9","hashOfConfig":"8"},{"size":4920,"mtime":1645784634165,"results":"10","hashOfConfig":"8"},{"size":3128,"mtime":1643994689497,"results":"11","hashOfConfig":"8"},{"size":2070,"mtime":1645738855261,"results":"12","hashOfConfig":"8"},{"size":2192,"mtime":1643994684633,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1qjkb9",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"17"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/josuedavid/Documents/react/frontend/src/index.js",[],[],["35","36"],"/Users/josuedavid/Documents/react/frontend/src/reportWebVitals.js",[],[],"/Users/josuedavid/Documents/react/frontend/src/App.js",["37","38","39","40","41","42","43","44","45"],[],"import { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport ScrollArea from \"react-scrollbar\";\nimport './App.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { UpdateTodo } from './components/updateTodo';\n\nconst CloseIcon = (props) =>(\n  <svg className={props.svgClass} xmlns=\"http://www.w3.org/2000/svg\" fill={props.fill} viewBox=\"0 0 320 512\"><path d=\"M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z\"/></svg>\n)\n\nfunction App() {\n\n  const [data, setData] = useState({ title: \"\", description: \"\" });\n  const [item, setItem] = useState({ title: \"\", description: \"\" });\n  const [toggle, setToggle] = useState(true)\n  const [newValue, setNewValue] = useState(\"\");\n  const [selectedTitle, setSelectedTitle] = useState(\"\");\n  const [show, setShow] = useState(true);\n  useEffect(() => {\n    run()\n  })\n\nfunction run() {\n  axios\n      .get(\"http://localhost:8000/todo\")\n      .then((res) => {\n          // console.log(res.data);\n          setData(res.data);\n      })\n      .catch((err) => {\n          console.log(err.message);\n      });\n}\n\n  function handleChange(e) {\n      setItem((data) => ({ ...data, title: e.target.value} ));\n  }\n\n  function handleSubmit(e) {\n      e.preventDefault();\n\n      axios\n          .post(\"http://localhost:8000/post/todo\", item)\n          .then((res) => {\n               setItem({ title: \"\", description: \"\" });\n              console.log(res.data.message);\n              run()\n          })\n          .catch((err) => {\n              console.log(\"Error couldn't create TODO\");\n              console.log(err.message);\n          });\n  }\n\n\n  function del(id) {\n    axios\n    .delete(\"http://localhost:8000/\" + id._id)\n    .then((res) => {\n        console.log(\"item deleted\")\n        run()\n        setShow(true)\n        setToggle(true)\n    })\n    .catch((err) => {\n        console.log(err.message);\n    });\n    // console.log(id._id)\n  }\n\n  function updateTask( id, newValue) {\n    // e.preventDefault();\n\n    console.log({ id }, { data });\n\n    axios\n        .put('http://localhost:8000/ '+id._id, newValue)\n        .then((res) => {\n            setData({ title: \"\", description: \"\" });\n            console.log(res.data.message);\n            run()\n        })\n        .catch((err) => {\n            console.log(\"Failed to update todo\");\n            console.log(err.message);\n        });\n}\n\nfunction changeData(e, item, newValue) {\n  setNewValue(e)\n  console.log(newValue)\n updateTask(e, item )\n\n}\n\nfunction setSelect(item) {\n  setSelectedTitle(item)\n}\n  return (\n    <div class=\"container h-1000\">\n  <div class=\"d-flex justify-content-center align-items-center vh-80\">\n  <div style={{textAlign: \"center\"}}>\n   \n           \n          \n \n       \n              <div\n         \n            style={{textAlign : \"center\"}}\n            >\n              { show && <form\n                  onSubmit={handleSubmit}\n                  className=\"form-container\"\n                  noValidate\n              >\n                <h1  >Add Task  <input\n                      type=\"text\"\n                      name=\"title\"\n                      id=\"text\"\n                      value={data.title}\n                      onChange={handleChange}\n                     \n               \n                  />\n                </h1>\n                  <input  size=\"60\" type=\"submit\" className=\"green\" className=\"same btn btn-block\" value=\"Create Todo\"/>\n                    \n                 \n              </form>}\n      \n              {Object.keys(data).map((item, i) => {\n               \n          return (\n            <div className=\"center\"  > \n             {toggle ? (\n           <div>\n             \n                <p key={item} onClick={() => {\n      setSelectedTitle(data[item].title)\n      console.log(data[item].title)\n      console.log(selectedTitle)\n      setShow(false)\n      setToggle(false)\n      \n    }}> {data[item].title}<button onClick={() => del(data[item])} className=\"close\"><CloseIcon  svgClass=\"close\" fill=\"red\"/></button></p> \n           </div>\n    ): (\n      <div>\n    {data[item].title === selectedTitle && <UpdateTodo run={run} _id={data[item]._id} toggle={setToggle} item={data[item].title} setShow={setShow}/>}\n    </div>\n    ) }\n            \n       \n         \n           \n           </div>\n          )\n              \n            \n             \n            })\n          } \n          </div>\n\n \n        \n             \n           \n      \n    \n      \n    \n    </div>      \n</div>\n</div>\n\n  );\n}\n\nexport default App;\n\n\n\n     ","/Users/josuedavid/Documents/react/frontend/src/components/showTodo.js",["46"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { UpdateTodo } from \"./updateTodo\";\n\nconst TodoCard = ({ data, handleEdit, handleDelete }) => {\n    const { _id, title, description } = data;\n\n    return (\n        <li key={_id}>\n            <div className=\"title-description\">\n                <h3>{title}</h3>\n                <p>{description}</p>\n            </div>\n\n            <div className=\"button-container\">\n                <button className=\"button\" name={_id} onClick={handleEdit}>\n                    edit\n                </button>\n                <button className=\"button\" name={_id} onClick={handleDelete}>\n                    delete\n                </button>\n            </div>\n        </li>\n    );\n}\n\nconst ShowTodo = () => {\n    const [todo, setTodo] = useState([]);\n    const [open, setOpen] = useState(false);\n    const [id, setId] = useState(\"\");\n    const [update, setUpdate] = useState(false);\n\n    useEffect(\n        function () {\n            axios\n                .get(\"http://localhost:8000/todo\")\n                .then((res) => {\n                    console.log(res.data);\n                    setTodo(res.data);\n                })\n                .catch((err) => {\n                    console.log(err.message);\n                });\n        },\n        [update]\n    );\n\n    function handleEdit(e) {\n        setId(e.target.name);\n        setOpen(true);\n    }\n\n    function handleUpdate() {\n        console.log(\"update:\", update, !update);\n        setUpdate(!update);\n    }\n\n    function handleDelete(e) {\n        axios.delete(`http://localhost:8000/${e.target.name}`);\n\n        setTodo((data) => {\n            return data.filter((todo) => todo._id !== e.target.name);\n        });\n    }\n\n    function handleClose() {\n        setId(\"\");\n        setOpen(false);\n    }\n\n    return (\n        <section className=\"container\">\n            {/* <Link to=\"/create-todo\" className=\"button-new\">\n                <button className=\"button\">New</button>\n            </Link> */}\n            <section className=\"contents\">\n                <h1>TODO</h1>\n                <ul className=\"list-container\">\n                    {todo.map((data) => (\n                        <TodoCard\n                            data={data}\n                            handleEdit={handleEdit}\n                            handleDelete={handleDelete}\n                        />\n                    ))}\n                </ul>\n            </section>\n            {open ? (\n                <section className=\"update-container\">\n                    <div className=\"update-contents\">\n                        <p onClick={handleClose} className=\"close\">\n                            &times;\n                        </p>\n\n                        <UpdateTodo\n                            _id={id}\n                            handleClose={handleClose}\n                            handleUpdate={handleUpdate}\n                        />\n                    </div>\n                </section>\n            ) : (\n                \"\"\n            )}\n        </section>\n    );\n}\n\nexport default ShowTodo;","/Users/josuedavid/Documents/react/frontend/src/components/updateTodo.js",["47","48","49"],[],"/Users/josuedavid/Documents/react/frontend/src/components/createTodo.js",["50"],[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":23},{"ruleId":"55","severity":1,"message":"59","line":2,"column":25,"nodeType":"57","messageId":"58","endLine":2,"endColumn":30},{"ruleId":"55","severity":1,"message":"60","line":2,"column":32,"nodeType":"57","messageId":"58","endLine":2,"endColumn":38},{"ruleId":"55","severity":1,"message":"61","line":5,"column":8,"nodeType":"57","messageId":"58","endLine":5,"endColumn":18},{"ruleId":"55","severity":1,"message":"62","line":7,"column":10,"nodeType":"57","messageId":"58","endLine":7,"endColumn":25},{"ruleId":"55","severity":1,"message":"63","line":19,"column":10,"nodeType":"57","messageId":"58","endLine":19,"endColumn":18},{"ruleId":"55","severity":1,"message":"64","line":92,"column":10,"nodeType":"57","messageId":"58","endLine":92,"endColumn":20},{"ruleId":"55","severity":1,"message":"65","line":99,"column":10,"nodeType":"57","messageId":"58","endLine":99,"endColumn":19},{"ruleId":"66","severity":1,"message":"67","line":130,"column":69,"nodeType":"68","messageId":"69","endLine":130,"endColumn":99},{"ruleId":"55","severity":1,"message":"70","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":14},{"ruleId":"55","severity":1,"message":"71","line":6,"column":20,"nodeType":"57","messageId":"58","endLine":6,"endColumn":29},{"ruleId":"72","severity":1,"message":"73","line":10,"column":8,"nodeType":"74","endLine":10,"endColumn":16,"suggestions":"75"},{"ruleId":"66","severity":1,"message":"67","line":72,"column":69,"nodeType":"68","messageId":"69","endLine":72,"endColumn":99},{"ruleId":"55","severity":1,"message":"70","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":14},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Routes' is defined but never used.","'ScrollArea' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'newValue' is assigned a value but never used.","'changeData' is defined but never used.","'setSelect' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Link' is defined but never used.","'setUpdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [data, update]",{"range":"81","text":"82"},[319,327],"[data, update]"]