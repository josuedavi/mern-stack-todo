{"ast":null,"code":"var _jsxFileName = \"/Users/josuedavid/Documents/react/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState({\n    title: \"\",\n    description: \"\"\n  });\n  const [item, setItem] = useState({\n    title: \"\",\n    description: \"\"\n  });\n  useEffect(() => {\n    run();\n  });\n\n  function run() {\n    axios.get(\"http://localhost:8000/todo\").then(res => {\n      // console.log(res.data);\n      setData(res.data);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }\n\n  function handleChange(e) {\n    setItem(data => ({ ...data,\n      title: e.target.value\n    }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios.post(\"http://localhost:8000/post/todo\", item).then(res => {\n      setItem({\n        title: \"\",\n        description: \"\"\n      });\n      console.log(res.data.message);\n    }).catch(err => {\n      console.log(\"Error couldn't create TODO\");\n      console.log(err.message);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form-container\",\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          id: \"text\",\n          value: data.title,\n          onChange: handleChange,\n          className: \" same\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          size: \"60\",\n          type: \"submit\",\n          class: \"green\",\n          className: \"same btn btn-block\",\n          value: \"Create Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), item.title, /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(data).map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: data[item].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 22\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ooGsKYBMIyyxOwVGVog7L+Z9Lcw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/josuedavid/Documents/react/frontend/src/App.js"],"names":["useEffect","useState","BrowserRouter","Route","Routes","axios","App","data","setData","title","description","item","setItem","run","get","then","res","catch","err","console","log","message","handleChange","e","target","value","handleSubmit","preventDefault","post","textAlign","Object","keys","map","i"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\n\nimport axios from 'axios';\nimport './App.css';\n\n\nfunction App() {\n\n  const [data, setData] = useState({ title: \"\", description: \"\" });\n  const [item, setItem] = useState({ title: \"\", description: \"\" });\n \n  useEffect(() => {\n    run()\n  })\n\nfunction run() {\n  axios\n      .get(\"http://localhost:8000/todo\")\n      .then((res) => {\n          // console.log(res.data);\n          setData(res.data);\n      })\n      .catch((err) => {\n          console.log(err.message);\n      });\n}\n\n  function handleChange(e) {\n      setItem((data) => ({ ...data, title: e.target.value} ));\n  }\n\n  function handleSubmit(e) {\n      e.preventDefault();\n\n      axios\n          .post(\"http://localhost:8000/post/todo\", item)\n          .then((res) => {\n               setItem({ title: \"\", description: \"\" });\n              console.log(res.data.message);\n          })\n          .catch((err) => {\n              console.log(\"Error couldn't create TODO\");\n              console.log(err.message);\n          });\n  }\n\n  return (\n    <body>\n\n        <header style={{textAlign: \"center\"}}>\n          <h1 >Add Task</h1>\n          <form\n                  onSubmit={handleSubmit}\n                  className=\"form-container\"\n                  noValidate\n              >\n                  <input\n                      type=\"text\"\n                      name=\"title\"\n                      id=\"text\"\n                      value={data.title}\n                      onChange={handleChange}\n                      className=\" same\"\n               \n                  />\n                \n                  <input  size=\"60\" type=\"submit\" class=\"green\" className=\"same btn btn-block\" value=\"Create Todo\"/>\n                    \n                 \n              </form>\n        </header>\n        \n        \n             \n              {item.title}\n      \n    \n      \n    \n           <ul>\n              {Object.keys(data).map((item, i) => {\n              return <li>{data[item].title}</li>;\n            })\n          }\n           </ul>\n     \n   \n  </body>\n \n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}